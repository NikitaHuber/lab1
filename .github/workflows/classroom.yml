name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # TODO build, test and deploy project

      - name: Prepare OpenJDK
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "21"
          cache: "gradle"

      - name: Build project
        uses: eskatos/gradle-command-action@v2
        with:
          arguments: clean bootJar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: build/libs/*.jar
          retention-days: 1
  test:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: build/libs/

      - name: Build images
        timeout-minutes: 10
        run: docker build . -t nikitazagainov/webapp

      - name: Run containers
        timeout-minutes: 5
        run: docker compose up -d --wait

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postman/[inst] Lab1.postman_collection.json
          environment: postman/[inst][local] Lab1.postman_environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: build/libs/

      - name: Build and copy files
        run: |
          docker build . -t nikitazagainov/webapp
          docker save -o webapp.tar nikitazagainov/webapp
          scp -r postgres webapp.tar docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~

      - name: Start application
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker compose down; docker load -i webapp.tar; docker compose up -d"
      - name: Cleanup
        run: rm -rf ~/.ssh



